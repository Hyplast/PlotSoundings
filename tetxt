snd = download_stored_query("fmi::observations::weather::sounding::multipointcoverage",
                                args=["starttime=" + start_time,
                                        "endtime=" + end_time,
                                        "place=Jokioinen"])


for sounding in soundings:
    plot_sounding(sounding)

def plot_sounding(sounding):
    p = sounding.pressures * units.hPa
    T = sounding.temperatures * units.degC
    Td = sounding.dew_points * units.degC
    wind_speed = sounding.wind_speeds * units('m/s')
    wind_dir = sounding.wind_directions * units.degrees
    u, v = mpcalc.wind_components(wind_speed, wind_dir)

    fig = plt.figure(figsize=(9, 9))
    skew = SkewT(fig, rotation=45)

    skew.plot(p, T, 'r')
    skew.plot(p, Td, 'g')

    skew.plot_barbs(p[::10], u[::10], v[::10])
    skew.ax.set_ylim(1000, 100)
    skew.ax.set_xlim(-40, 60)

    skew.ax.set_xlabel(f'Temperature ({T.units:~P})')
    skew.ax.set_ylabel(f'Pressure ({p.units:~P})')

    lcl_pressure, lcl_temperature = mpcalc.lcl(p[0], T[0], Td[0])
    skew.plot(lcl_pressure, lcl_temperature, 'ko', markerfacecolor='black')

    prof = mpcalc.parcel_profile(p, T[0], Td[0]).to('degC')
    skew.plot(p, prof, 'k', linewidth=2)

    skew.shade_cin(p, T, prof, Td)
    skew.shade_cape(p, T, prof)

    skew.ax.axvline(0, color='c', linestyle='--', linewidth=2)

    skew.plot_dry_adiabats()
    skew.plot_moist_adiabats()
    skew.plot_mixing_lines()

    plt.title(sounding.name, loc='left')
    plt.title(sounding.nominal_time, loc='right')

    plt.show()